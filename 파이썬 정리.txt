변수 + 문자
let str = "green"
console.log("재미있는" + green)
console.log(`재미있는 ${str}`)

문자열 포멧팅: 문자열 안에 어떤 값을 삽입
포맷코드 %s 문자열 %d 정수 %f 소수

number = 18
print("현재 온도는 %d입니다." %number)
print("%0.4f" %3.123456789)
num = 3
print("나는 사과 %d를 먹었다" %num)

format함수 사용하기
"나는 사과 {0}개를 먹었다" .format(변수)

파이썬 3.6버전부터 사용가능
f문자열 포매팅
f'문자열 {표현식}'
name = "green"
age = 30
print(f'나의 이름은 {name}이고 나이는 {age}이다')

문자열 관련 함수
1.문자개수세기 count() ===>  문자열에서 해당 문자가 몇개인지 반환
문자열.count('문자')
ex) str = 'hobby'   <<,이변수에서 b가 몇개있냐
str.count('b')

2.위치알려주기 fint() ==> 문자가 처음 나온 위치를 반환
문자열.find('문자')
ex) str = "javascript"
str.find('a')

3.문자열 삽입 join() ---> 문자열 사이에 문자열을 삽입
"추가할 문자".join("문자열")

ex) "*".join('abcd') ====> 'a*b*c*d'

리스트를 ====> 문자열로

"*".join(['a','b','c','d']) ====> 'a*b*c*d'
4. 대문자로 변환 upper()
문자열.upper()
5.소문자로 변환 lower()
문자열.lower()
6.왼쪽 공백 제거 lstrip()
문자열.lstrip()
7.오른쪽 공백 제거 rstrip()
문자열.rstrip()
8.양쪽 공백제거 strip()
문자열.strip()
9.문자열 바꾸기 replace()
문자열.replace("a","b")
10.문자열 --> 리스트 split()
str = "Life is too short"
str.split() ----> ["Life","is","too","short"]
str2 = "a:b:c:d"
str2.split(":") ====> ["a","b","c","d"]



=================================3/2
파이썬 자료형
숫자형: 숫자 형태로 이루어진 자료형
정수, 실수 ,8진수, 16진수

문자열 자료형: 문자들의 집합 "", '', """ """, ''' '''  //위에꺼 화욜에 정리 실습 day01

=========================================================
리스트 자료형: nums = [1, 2, 3, 4, 5, 6]  =======관련 실습은 day02 ex01_list.py
리스트 명 = [요소1, 요소2, 요소3] 리스트명[0]
리스트 관련 함수
1. append() 리스트의 마지막 요소를 추가
구문) 
리스트.append(추가할 요소)
2. sort() 리스트의 요소를 순서대로 정렬
구문)
리스트.sort()
3. reverse() 리스트 뒤집기
구문) 
리스트.reverse()
4.index() 리스트에 해당값이 있으면 그 값의 인덱스 값을 리턴
없으면 오류발생
구문)
리스트.index(value)
5.insert(start, value) 리스트에 요소삽입 start번째 위치에 value를 삽입
구문)
리스트.insert(2,20)
6.remove(value) 리스트에서 첫번째로 나오는 value삭제(중복 값이 있어도 하나만 삭제)
list = [1, 2, 3, 1, 2,3]   ex) list.remove(2)  ====> [1,3,1,2,3]
7. pop() 리스트의 맨 마지막요소를 리턴하고 그 요소를 삭제
구문)
리스트.pop()
8.count(value) 리스트안에 value가 몇개 있는지 개수를 리턴
구문)
리스트.count(3)
======================================

튜플 자료형 () ====실습 day02 ex02_tuple.py
요소값 변경할 수 없음
t1 = ()
t2 = (1,)
t3 = (1, 2, 3)
t4 = 1, 2, 3
==============================

딕셔너리 자료형: key: value  ======실습 day02 ex03_dictionary.py
d1 = {'name': 'green', 'age': 30}
d1 = {'name': 'green' 'age': 30, 'name': 'blue'}
d1['name']


딕셔너리 관련 함수
1.key리스트 만들기 keys
구문)
딕셔너리.keys()  파이썬 2.7버전까지 key만 리스트로 돌려줌
그 이후부터는 dict_keys객체로 돌려줌
list()
2. value리스트 만들기 values()
구문)
딕셔너리.values()
파이썬 2.7버전까지 value만 리스트로 돌려줌
그 이후부터는 dict_values 객체로 돌려줌

3.key,value쌍으로 구하기 items()
key와 value의 쌍을 튜플로 묶은 값을 dict_items 객체로 돌려줌
4.key: value쌍 모두지우기 clear()
구문) 딕셔너리.clear()
5.key로 value값 구하기 get()
구문) 딕셔너리.get(key)
딕셔너리[key]
차이) 존재하지 않는 key로 접근시 딕셔너리[key] key오류가 발생
딕셔너리.get(key) None을 돌려줌
6. 해당 key가 딕셔너리 안에 있는지 조사 in
구문) 'key' in 딕셔너리 있으면 True 없으면 false 리턴
==============================

집합 자료형: 파이썬 2.3부터 지원 시작     =============실습 day02 ex04_set.py
집합에 관련된 것을 쉽게 처리하기 위해 만든 자료형
*중복을 허용하지 않음
s1 = set([1, 2, 3])
s2 = set("Hello")
s= set()
s3 = set([1,2,3,4,5,1,2,3])
li = list(s3)

집합 자료형 관련 함수

1. 값 하나 추가하기 add
구문)
집합.add(value)

2. 값 여러개 추가하기 update
구문) 집합.update([4,5,6])

3. 특정 값 제거하기 remove()
구문) 집합.remove(value)

4.교집합 집합1 & 집합2, 집합1.intersection(집합2)
s1 = set([1, 2, 3, 4, 5, 6])
s2 = set([4, 5, 6, 7 ,8 ,9])
s1 & s2 {4, 5, 6}
s1.intersection(s2) {4, 5, 6}

5. 합집합 집합 1 | 집합2 , 집합1.union(집합2)
집합을 합쳐서 리턴해줌(중복해서 포함되는 값은 하나씩만 들어감)
s1 = set([1, 2, 3, 4, 5, 6])
s2 = set([4, 5, 6, 7, 8, 9])
s1 | s2 {1, 2, 3, 4, 5, 6, 7, 8, 9}
s1.union(s2) {1, 2, 3, 4, 5, 6, 7, 8, 9}

6. 차집합 집합1 - 집합2, 집합1.difference(집합2)
s1 = set([1, 2, 3, 4, 5, 6])
s2 = set([4, 5, 6, 7, 8, 9])
s1 - s2 {1, 2, 3}

[1,2,3,4,5]
===============================================


불 자료형: 참과거짓을 나타내는 자료형 True 참, False거짓  ======== 실습 day02 ex05_bool.py

















